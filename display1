#!/bin/bash

# designed for TSP 7" HDMI display
# dimensions (char):
#   columns (x) 64
#   lines   (y) 41

#LARGE_PRINT="figlet -f banner"
TSP_PATH="/home/pi"
L_FONT="$TSP_PATH/mono12.tlf"
M_FONT="$TSP_PATH/mono9.tlf"
M_NUM_COL=36
L_NUM_COL=82
M_PRINT="figlet -f $M_FONT -w $M_NUM_COL"
L_PRINT="figlet -f $L_FONT -w $L_NUM_COL"
MED_ROWS=7
LARGE_ROWS=8

height=$(tput lines)
width=$(tput cols)

BG_WHITE="$(tput setab 7)"
BG_BLACK="$(tput setab 0)"
FG_BLACK="$(tput setaf 0)"
FG_RED="$(tput setaf 1)"
FG_GREEN="$(tput setaf 2)"
FG_YELLOW="$(tput setaf 3)"
FG_BLUE="$(tput setaf 4)"
FG_MAGENTA="$(tput setaf 5)"
FG_CYAN="$(tput setaf 6)"
FG_WHITE="$(tput setaf 7)"

########################
# functions

function h_line
{
  for i in $(seq 1 $width); do
    echo -n "_"
  done
}

########################
# initialization

TIME_BLINK=0

GPSDEV=/dev/ttyUSB0
GPSLOG=`mktemp --dir /home/pi/gpslogs/XXXXX.gps -u`

#echo "delay for autoboot"
if [ -z "$USER" ]; then
  # kick off gpsd
  sleep 9
  clear
  figlet -f $L_FONT -w 64 -r "TSP"
  sleep 3
  #gpsd -N /dev/ttyUSB0
  if [ -c $GPSDEV ]; then
    #gpsctl $GPSDEV
    sleep 2
    gpspipe -w -d -l -o $GPSLOG
  fi
fi

# Save screen
tput smcup
echo -n ${BG_WHITE}${FG_BLACK}
clear

speed="0"
last_speed=$speed

while : ; do
#  echo -n ${BG_BLUE}${FG_BLACK}
#  clear

  #############################################################
  # left side
  tput cup 0 0

  # oil psi
#  oil_psi=$(awk 'BEGIN{printf "%3.1f\n", (rand()*60.0 + 20)}')
#   $L_PRINT -r "$oil_psi"

  if [ -f $GPSLOG ]; then
    speed=$(tail -n 1 $GPSLOG 2>/dev/null | awk -F, '/speed/ {print $14}' | awk -F: '{printf "%.1f\n", $2}')
  else
    speed=0.0
  fi
  if [ -z "$speed" ]; then speed=$last_speed; else last_speed=$speed; fi
  $L_PRINT -r "$speed"
  tput cuu1; tput cuu1; h_line

  #echo -n ${BG_WHITE}${FG_RED}
#  water_psi=$(awk 'BEGIN{printf "%3.1f\n", (rand()*10.0)}')
#  $L_PRINT -r "$water_psi"
#  tput cuu1; tput cuu1; h_line
  #echo -n ${BG_WHITE}${FG_BLACK}

  # running time
  up=$(cat /proc/uptime | awk '{ printf "%02d:%02d:%02d", ($1/3600), ($1/60), ($1%60) }')
  $L_PRINT -r "$up"
  tput cuu1; tput cuu1; h_line

  time=$(date '+%R')
#  if [ $TIME_BLINK -eq 1 ]; then
#    time=${time/:/.}
#    TIME_BLINK=0
#  else
#    TIME_BLINK=1
#  fi
  $L_PRINT -r "$time"

#  tput cuu1;tput cuu1
#  tput cuu1; h_line
#
#  water_temp=$(awk 'BEGIN{printf "%3.1f\n", (rand()*50.0+150.0)}')
#  $M_PRINT -w $num_col_r -r "$water_temp"
#  tput cuu1;tput cuu1
#  tput cuu1; h_line
#
#  eng_temp=$(awk 'BEGIN{printf "%3.1f\n", (rand()*20.0+150.0)}')
#  $M_PRINT -w $num_col_r -r "$eng_temp"

  #############################################################
  # right side
  RIGHT_START_COL=84
  sm_off=4
  tput cup $(((LARGE_ROWS + 1) * 0 + $sm_off)) $RIGHT_START_COL
  echo -n "Speed"

  tput cup $(((LARGE_ROWS + 1) * 1 + $sm_off)) $RIGHT_START_COL
  echo -n "Run Time"

  tput cup $(((LARGE_ROWS + 1) * 2 + $sm_off)) $RIGHT_START_COL
  echo -n "Clock"

#  tput cup $(((LARGE_ROWS + 1) * 3 + $sm_off)) $RIGHT_START_COL
#  echo -n "Water Temp"
#  tput cup $(((LARGE_ROWS + 1) * 4 + $sm_off)) $RIGHT_START_COL
#  echo -n "Eng Temp"
  #tput cup $(((LARGE_ROWS + 1) * 5 + $sm_off)) $RIGHT_START_COL
  #echo -n "Eng Temp 2"

  tput civis

  # get input
#  read -p "" c
#  case $c in
#    q) break ;;
#    *) : ;;
#  esac

#  sleep 1

done

# Restore screen
tput rmcup
tput cnorm
